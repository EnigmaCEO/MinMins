//
// Copyright (c) 2016-2017 Tapjoy, Inc.
// All rights reserved.
//

//
// DO NOT EDIT THIS FILE.
//

using UnityEngine;

namespace TapjoyUnity.Internal {

  public sealed class TapjoyUnityInit : MonoBehaviour {

    static bool initialized = false;

    void Awake() {
      if (!initialized) {
        initialized = true;

        #if UNITY_EDITOR
        #elif UNITY_ANDROID
        ApiBindingAndroid.Install();
        #elif UNITY_IOS
        ApiBindingIos.Install();
        #endif

        #if UNITY_5_4_OR_NEWER
        UnityEngine.SceneManagement.SceneManager.activeSceneChanged += (oldScene, newScene) => {
          UnityDependency.OnActiveSceneChanged(Wrap(oldScene), Wrap(newScene));
        };
        UnityEngine.SceneManagement.SceneManager.sceneLoaded += (scene, mode) => {
          UnityDependency.OnSceneLoaded(Wrap(scene), (int) mode);
        };
        UnityEngine.SceneManagement.SceneManager.sceneUnloaded += (scene) => {
          UnityDependency.OnSceneUnloaded(Wrap(scene));
        };
        TapjoyUnity.Internal.UnityDependency.sceneCount = () => {
          return UnityEngine.SceneManagement.SceneManager.sceneCount;
        };
        TapjoyUnity.Internal.UnityDependency.GetActiveScene = () => {
          return Wrap(UnityEngine.SceneManagement.SceneManager.GetActiveScene());
        };
        TapjoyUnity.Internal.UnityDependency.GetSceneAt = (index) => {
          return Wrap(UnityEngine.SceneManagement.SceneManager.GetSceneAt(index));
        };

        TapjoyUnity.Internal.UnityDependency.ToJson = JsonUtility.ToJson;
        #endif
      }
    }

    #if UNITY_5_4_OR_NEWER
    static TapjoyUnity.Internal.UnityCompat.SceneCompat Wrap(UnityEngine.SceneManagement.Scene scene) {
      return new TapjoyUnity.Internal.UnityCompat.SceneCompat(scene, scene.IsValid(), scene.buildIndex, scene.name, scene.path);
    }
    #endif
  }
}
